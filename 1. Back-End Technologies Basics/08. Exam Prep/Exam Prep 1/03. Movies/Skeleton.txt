describe("movieService Tests", function () {

  describe("getMovies()", function () {
    //// Test: Should return all movies with status 200
    // 1. Check if the response status is 200.
    // 2. Ensure the data is an array with a length of 3.
    // 3. Verify the first item contains the required keys: 'id', 'name', 'genre', 'year', 'director', 'rating', 'duration', 'language', 'desc'.
  });

  describe("addMovie()", function () {
    // Test: Should successfully add a new movie
    // 1. Create a new movie object with valid data.
    // 2. Check if the response status is 201 and the success message is correct.
    // 3. Verify that the newly added movie is present in the movie list.

    // Test: Should return an error for invalid movie data
    // 1. Create a movie object with incomplete or invalid data.
    // 2. Check if the response status is 400 and the error message is correct.
  });

  describe('deleteMovie()', function () {
    // Test: Should delete a movie by id successfully
    // 1. Add a movie to ensure there is one to delete.
    // 2. Delete the movie by its id and check if the response status is 200.
    // 3. Verify that the success message is correct.
    // 4. Ensure that the movie is no longer in the list.

    // Test: Should return 404 for a non-existent movie id
    // 1. Attempt to delete a movie with an id that doesn't exist.
    // 2. Check if the response status is 404 and the error message is correct.
  });

  describe("updateMovie()", function () {
    // Test: Should update an existing movie successfully
    // 1. Create an updated movie object with valid data.
    // 2. Update the movie by its name and check if the response status is 200.
    // 3. Verify that the success message is correct.
    // 4. Ensure that the updated movie is present in the movie list.

    // Test: Should return an error if the movie to update does not exist
    // 1. Attempt to update a movie that doesn't exist.
    // 2. Check if the response status is 404 and the error message is correct.

    // Test: Should return an error if the new movie data is invalid
    // 1. Provide incomplete or invalid data for an existing movie.
    // 2. Check if the response status is 400 and the error message is correct.
  });
});